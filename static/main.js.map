{"version":3,"sources":["./src/app/service/websocket/websocket.service.ts","./src/app/component/room/room.viewmodel.ts","./src/environments/environment.ts","./src/app/component/room/room.component.ts","./src/app/component/room/room.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/service/api/api.service.ts","./src/app/page/lobby/lobby.component.ts","./src/app/page/lobby/lobby.component.html","./src/app/app.module.ts","./src/app/service/websocket/websocket.schema.ts","./src/app/page/lobby/lobby.viewmodel.ts","./src/app/service/api/api.schema.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { DemoMessage } from './websocket.schema';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebsocketService {\n\n  // 第三方測試 http://coolaf.com/tool/chattest\n\n  public conn: WebSocket\n  // private host = `ws://123.193.145.165:1002/ws`\n  private host = `ws://${document.location.host}/ws`\n\n  onMessage$ = new Subject<DemoMessage>();\n\n  // ====.====.====.====.====.====.====.====.====.====.====.====.====.====.====.====.====.====.====\n\n  constructor() { }\n\n  // ====.====.====.====.====.====.====.====.====.====.====.====.====.====.====.====.====.====.====\n  startConnect(token: string) {\n    if (window[\"WebSocket\"]) {\n      this.conn = new WebSocket(`${this.host}?token=${token}`);\n      this.conn.onclose = function(evt) {\n        console.log('Connection closed.')\n      };\n      this.conn.onmessage = (evt: MessageEvent) => {\n\n        let data: string = evt.data\n        let split = data.split('\\n')\n        for (const subDate of split) {\n          if (subDate && !subDate.includes('wel')) {\n            // 有純的 welecome 訊息\n            let mes = new DemoMessage(subDate)\n            this.onMessage$.next(mes)\n            // console.log(mes)\n          }\n        }\n      };\n    } else {\n      console.log('Your browser does not support WebSockets.')\n    }\n  }\n}\n","import { ActionDisplayName, DemoRoomAction } from \"src/app/service/websocket/websocket.schema\"\n\nconst initResult = ['[1] 未知', '[2] 未知']\nexport class RoomViewModel {\n\n  name = ''\n  action = DemoRoomAction.init\n  targetTime = new Date()\n  remaindTime = ''\n  updateRemaindTime() {\n    let ms = this.targetTime.getTime() - new Date().getTime();\n    let s = Math.floor(Math.max(0, ms / 1000))\n    this.remaindTime = s.toString();\n  }\n\n  get actionName() {\n    return ActionDisplayName[this.action]\n  }\n\n  result = initResult\n\n  betAreaList: BetAreaViewModel[] = AllBetAreaId.map(id => new BetAreaViewModel(Number(id)))\n\n  reset() {\n    this.result = initResult\n\n    for (const betArea of this.betAreaList) {\n      betArea.amount = 0\n      betArea.isWin = false\n    }\n  }\n}\n\nexport enum AllBetArea {\n  Left = 1,\n  Right = 2,\n  Tie = 3,\n}\nconst AllBetAreaId = Object.keys(AllBetArea).filter(value => !isNaN(Number(value)))\n\nconst BetAreaNameMap = {\n  [AllBetArea.Left]: '1比較大',\n  [AllBetArea.Right]: '2比較大',\n  [AllBetArea.Tie]: '和',\n}\nexport class BetAreaViewModel {\n\n  amount = 0\n  isWin = false\n\n  constructor(\n    public id: number\n  ) { }\n\n  get displayName() {\n    return BetAreaNameMap[this.id]\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { interval, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { BetAreaViewModel, RoomViewModel } from './room.viewmodel';\n\n@Component({\n  selector: 'app-room',\n  templateUrl: './room.component.html',\n  styleUrls: ['./room.component.scss']\n})\nexport class RoomComponent implements OnInit, OnDestroy {\n\n  @Input()\n  viewModel: RoomViewModel\n\n  @Output()\n  areaClick = new EventEmitter<BetAreaViewModel>()\n\n  private ngUnsubscribe = new Subject<void>();\n\n  // ====.====.====.====.====.====.====.====.====.====.====.====.====.====.====.====.====.====.====\n\n  constructor() { }\n\n  ngOnInit(): void {\n    const source = interval(300);\n    source.pipe(\n      takeUntil(this.ngUnsubscribe)\n    )\n    .subscribe(() => {\n      this.viewModel.updateRemaindTime();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.ngUnsubscribe.next();\n    this.ngUnsubscribe.complete();\n  }\n\n  // ====.====.====.====.====.====.====.====.====.====.====.====.====.====.====.====.====.====.====\n\n}\n","\n<ng-container *ngIf=\"viewModel\">\n\n  <label>房名: {{ viewModel.name }}</label>&nbsp;\n  <label>動作: {{ viewModel.actionName }}</label><br>\n  <label>倒數: {{ viewModel.remaindTime }}秒</label><br>\n  <label>結果:</label><br>\n  <ng-container *ngFor=\"let info of viewModel.result\">\n    <label>{{info}}</label><br>\n  </ng-container>\n\n  <ng-container *ngFor=\"let betArea of viewModel.betAreaList\">\n\n    <div class=\"bet-area\" (click)=\"areaClick.emit(betArea)\">\n      <!-- <label>下注區:{{ betArea.id }}</label><br> -->\n      <label>下注區:{{ betArea.displayName }}</label><br>\n      <label>壓注:{{ betArea.amount }}</label><br>\n      <label *ngIf=\"betArea.point !== 0\">點數:{{ betArea.point }}</label><br>\n      <label *ngIf=\"betArea.isWin\">WIN</label>\n      <label *ngIf=\"!betArea.isWin\">_</label>\n    </div>\n\n  </ng-container>\n  <hr>\n</ng-container>\n\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n  constructor() {\n\n  }\n\n}\n","\n<router-outlet></router-outlet>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { timeout } from 'rxjs/operators';\nimport { BaseAPIResponse, ErrorResponse } from './api.schema';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  // private host = `http://123.193.145.165:1002`\n  private host = `http://${document.location.host}`\n\n  // ====.====.====.====.====.====.====.====.====.====.====.====.====.====.====.====.====.====.====\n\n  constructor(\n    private http: HttpClient,\n  ) { }\n\n  // ====.====.====.====.====.====.====.====.====.====.====.====.====.====.====.====.====.====.====\n  // present\n  private fullURL(command: string): string {\n    let path = [this.host, command].map(ele => removeTrailingSlash(ele))\n    return path.join('/');\n  }\n\n  // ====.====.====.====.====.====.====.====.====.====.====.====.====.====.====.====.====.====.====\n  // action\n\n  async guestLogin() {\n    return this.convenientGet<any>(this.fullURL('guestLogin'));\n  }\n\n  async bet(token: string, room_id: string, area: number, amount: number) {\n    const headers  = {\n      token,\n    }\n    const body = {\n      room_id,\n      area,\n      amount,\n    }\n    return this.convenientPost<any>(this.fullURL('bet'), body, headers);\n  }\n\n  // ====.====.====.====.====.====.====.====.====.====.====.====.====.====.====.====.====.====.====\n  private async convenientGet<resType = object>(\n    path: string,\n    waitTime: number = 1500,\n  ): Promise<resType> {\n\n    const res = await this.http.get(path, {responseType: 'text'}).pipe(timeout(waitTime))\n      .toPromise()\n      .catch(this.handleError);\n\n    return res;\n  }\n\n  private async convenientPost<resType = object>(\n    path: string,\n    body: any = {},\n    headers: any = {},\n    waitTime: number = 1500,\n  ): Promise<resType> {\n\n    const res = await this.http.post(path, body, { headers }).pipe(timeout(waitTime))\n      .toPromise()\n      .catch(this.handleError);\n\n    return res;\n  }\n\n  private handleError(error: any): Promise<any> {\n    console.log('api error', error);\n    return Promise.resolve(new ErrorResponse(error));\n  }\n}\n\nfunction removeTrailingSlash(str) {\n  return str.replace(/\\/+$/, '');\n}\n\n","import { Component, OnInit } from '@angular/core';\nimport { DemoCmd, DemoRoomAction } from 'src/app/service/websocket/websocket.schema';\nimport { WebsocketService } from 'src/app/service/websocket/websocket.service';\nimport { LobbyViewModel } from './lobby.viewmodel';\nimport { BetAreaViewModel, RoomViewModel } from '../../component/room/room.viewmodel';\nimport { ApiService } from 'src/app/service/api/api.service';\n\n@Component({\n  selector: 'app-lobby',\n  templateUrl: './lobby.component.html',\n  styleUrls: ['./lobby.component.scss']\n})\nexport class LobbyComponent implements OnInit {\n\n  viewModel = new LobbyViewModel()\n\n  // ====.====.====.====.====.====.====.====.====.====.====.====.====.====.====.====.====.====.====\n\n  constructor(\n    private api: ApiService,\n    private websocket: WebsocketService,\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  // ====.====.====.====.====.====.====.====.====.====.====.====.====.====.====.====.====.====.====\n  async login() {\n    let res = await this.api.guestLogin()\n    this.viewModel.token = res\n  }\n\n  startConnect() {\n    if (!this.websocket.conn) {\n      this.websocket.startConnect(this.viewModel.token)\n      this.websocket.onMessage$.subscribe((event) => {\n        if (event.cmd === DemoCmd.game_player_info) {\n          console.log(`使用者:${event.user_name},餘額:${event.balance}`)\n          this.viewModel.userName = event.user_name\n          this.viewModel.balance = event.balance\n        }\n        else if (event.cmd === DemoCmd.game_room_list) {\n          for (const info of event.room_list) {\n            // 檢查並建立房間\n            this.roomDataUpdate(info)\n          }\n        }\n        else if (event.cmd === DemoCmd.game_state) {\n          // 檢查並建立房間\n          this.roomDataUpdate(event)\n        }\n        else if (event.cmd === DemoCmd.bet) {\n          if (event.error_message) {\n            console.log(event.error_message)\n            return\n          }\n          console.log(`下注資料:${JSON.stringify(event.obj, null, 2)}`)\n          this.viewModel.balance = event.balance\n          let bet_info = event.bet_info\n          let room = this.viewModel.roomList.find(ele => ele.name === bet_info.room_id)\n          if (room) {\n            let betArea = room.betAreaList.find(ele => ele.id === bet_info.area)\n            if (betArea) {\n              betArea.amount = parseInt(bet_info.amount)\n            }\n          }\n        }\n        else if (event.cmd === DemoCmd.game_result) {\n          console.log(`結算資料:${JSON.stringify(event.obj, null, 2)}`)\n\n          this.viewModel.balance = event.balance\n          let room_id = event.obj['room_id']\n          let room = this.viewModel.roomList.find(ele => ele.name === room_id)\n          if (room) {\n            room.result.push(`總輸贏:${event.obj['win_amount']}`)\n          }\n          else {\n            console.log('找不到', room_id)\n          }\n        }\n        else {\n          console.log(event.cmd, event.obj)\n        }\n      })\n    }\n    else {\n      console.log('連線已存在')\n    }\n  }\n\n  roomDataUpdate(info: any) {\n    // console.log(info)\n    // console.log(`房間:${info.room_name},動作:${info.action},資料:${JSON.stringify(info.data)}`)\n\n    let roon_id = info.room_name || info.room_id\n    let data = info.data || info.status\n\n    { // 檢查創建\n      let room = this.viewModel.roomList.find(ele => ele.name === roon_id)\n      if (!room) {\n        let newRoom = new RoomViewModel()\n        newRoom.name = roon_id\n        this.viewModel.roomList.push(newRoom)\n      }\n    }\n    { // 更新房間資料\n      let room = this.viewModel.roomList.find(ele => ele.name === roon_id)\n      if (room) {\n        room.action = info.action\n        if (data && data.seconds) {\n          room.targetTime = new Date(new Date().getTime() + data.seconds * 1000);\n        }\n        if (info.action === DemoRoomAction.start_bet) {\n          room.reset()\n        }\n        else if (info.action === DemoRoomAction.result) {\n\n          let result = []\n          let pointDict = data.point\n\n          for (const idStr in pointDict) {\n            const point = pointDict[idStr];\n            let id = parseInt(idStr)\n\n            result.push(`[${id}] 開 [${point}點]`)\n          }\n          let win_area = data.win_area\n          for (const betArea of room.betAreaList) {\n            betArea.isWin = (betArea.id === win_area)\n          }\n          room.result = result\n        }\n      }\n    }\n  }\n\n  async areaClick(room: RoomViewModel, betArea: BetAreaViewModel) {\n    // console.log(room, betArea)\n    let res = await this.api.bet(this.viewModel.token, room.name, betArea.id, this.viewModel.selectPoint)\n    // console.log(res)\n    // {\n    //   \"bet_info\": {\n    //       \"room_id\": \"r1\",\n    //       \"area\": 1,\n    //       \"amount\": \"50\"\n    //   },\n    //   \"balance\": \"950\",\n    //   \"user_total_bet\": {\n    //       \"area1\": \"50\",\n    //       \"area2\": \"0\",\n    //       \"area3\": \"0\"\n    //   },\n    //   \"error_message\": \"\"\n    // }\n    if (res.error_message) {\n      return\n    }\n    this.viewModel.balance = res.balance\n    let user_total_bet = res.user_total_bet\n\n    for (const betArea of room.betAreaList) {\n      let key = `area${betArea.id}`\n      betArea.amount = user_total_bet[key]\n    }\n  }\n}\n","\n<!-- 未登入 -->\n<ng-container *ngIf=\"!viewModel.userName\">\n\n  <button (click)=\"login()\">登入</button><br>\n\n  <ng-container *ngIf=\"viewModel.token\">\n    <button (click)=\"startConnect()\">連線</button>\n  </ng-container>\n\n</ng-container>\n\n<!-- 已登入 -->\n<ng-container *ngIf=\"viewModel.userName\">\n\n  <!-- 使用者資訊 -->\n  <label>使用者:{{ viewModel.userName }}</label><br>\n  <label>餘額:{{ viewModel.balance }}</label>\n\n  <hr>\n\n  <!-- 籌碼選擇 -->\n  <ng-container *ngFor=\"let point of viewModel.optionalPoint\">\n    <button (click)=\"viewModel.selectPoint = point\">\n      <label *ngIf=\"viewModel.selectPoint === point\">*</label>\n      {{point}}\n    </button>\n  </ng-container>\n\n  <hr>\n\n  <!-- 下注區選擇 -->\n  <ng-container *ngFor=\"let room of viewModel.roomList\">\n\n    <app-room\n      [viewModel]='room'\n      (areaClick)=\"areaClick(room, $event)\"\n    ></app-room>\n\n  </ng-container>\n\n</ng-container>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LobbyComponent } from './page/lobby/lobby.component';\nimport { WebsocketService } from './service/websocket/websocket.service';\nimport { RoomComponent } from './component/room/room.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ApiService } from './service/api/api.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LobbyComponent,\n    RoomComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n  ],\n  providers: [\n    ApiService,\n    WebsocketService,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","\nexport enum DemoCmd {\n  game_player_info = 'game_player_info',\n  game_room_list = 'game_room_list',\n\n  game_state = 'game_state',\n  bet = 'bet',\n  game_result = 'game_result',\n}\n\nexport enum DemoRoomAction {\n  init = 'init',\n  start_bet = 'start_bet',\n  count_down = 'count_down',\n  stop_bet = 'stop_bet',\n  result = 'result',\n}\n\nexport const ActionDisplayName = {\n  [DemoRoomAction.init]: '初始化',\n  [DemoRoomAction.start_bet]: '下注中',\n  [DemoRoomAction.count_down]: '下注中',\n  [DemoRoomAction.stop_bet]: '結束下注',\n  [DemoRoomAction.result]: '結算中',\n}\n\nexport class DemoMessage {\n\n  obj: any = {}\n\n  // ====.====.====.====.====.====.====.====.====.====.====.====.====.====.====.====.====.====.====\n\n  constructor(public str: string) {\n    try {\n      this.obj = JSON.parse(str)\n    } catch (error) {\n      console.log(`DemoMessage parse <${str}> error: error`)\n    }\n  }\n\n  // ====.====.====.====.====.====.====.====.====.====.====.====.====.====.====.====.====.====.====\n  // present\n\n  // 通用\n  get cmd(): DemoCmd | undefined {\n    return this.obj.cmd\n  }\n\n  // 使用者\n  get user_name(): string | undefined {\n    return this.obj.user_name\n  }\n\n  get balance(): string | undefined {\n    return this.obj.balance\n  }\n\n  get room_list(): any {\n    return this.obj.room_list\n  }\n\n  // 房間\n  get room_name(): string | undefined {\n    return this.obj.room_name\n  }\n\n  get action(): DemoRoomAction | undefined {\n    return this.obj.action\n  }\n\n  get data(): any {\n    return this.obj.data\n  }\n\n  // 下注\n  get bet_info(): any {\n    return this.obj.bet_info\n  }\n\n  get error_message(): string {\n    return this.obj.error_message\n  }\n\n  // ====.====.====.====.====.====.====.====.====.====.====.====.====.====.====.====.====.====.====\n}\n","import { RoomViewModel } from \"src/app/component/room/room.viewmodel\";\n\nexport class LobbyViewModel {\n\n  token = ''\n\n  userName = ''\n  balance = ''\n\n  selectPoint = 50\n  optionalPoint = [50, 100, 150, 200]\n\n  roomList: RoomViewModel[] = []\n\n}\n","\n\nexport class BaseAPIResponse {\n\n  Message = '';\n\n  constructor(params) {\n    Object.assign(this, params);\n  }\n}\n\nexport class ErrorResponse extends BaseAPIResponse {\n  constructor(params) {\n    super(params);\n\n    this.Message = params.message;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LobbyComponent } from './page/lobby/lobby.component';\n\nconst routes: Routes = [\n  { path: '', component: LobbyComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}